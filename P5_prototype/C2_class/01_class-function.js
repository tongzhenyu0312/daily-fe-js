/**
 * 下面来详细阐述下 JS模拟类的 丑恶行径
 * 普通面向类的语言中，类会被 "复制"(实例化)多次，就像用模具制作东西一样
 * 每一次实例化都是一次 类的行为复制到具体对象的过程，每一次实例化都会执行这个过程
 * 换句话说，类的实例化/继承是 一个从左往右，从上往下的行为
 * 
 * JS利用了 每个函数都有一个prototype属性，指向另外一个对象
 * 当使用new Foo()时，得到的实例对象会在初始化的时候将其[[prototype]]指向Foo.prototype
 * JS中不存在类，所以它无法通过类来创建 毫无关联的实例，
 * 通过JS的模拟类创建的实例都是互相关联的，它们的[[ptototype]]属性指向同一个对象Foo.prototype
 * 换句话说，类的实例化/继承 是一个从右往左，从下往上的行为
 */
